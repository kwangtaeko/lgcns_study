{{>layouts/header}}

<div class="container my-5">
    <div class="card shadow-lg border-0">
        <div class="card-body p-4">
            {{#stockDetail}}
                <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap">
                    <h3 class="fw-bold mb-2 text-primary">
                        <i class="bi bi-graph-up-arrow"></i> {{name}}
                    </h3>
                    <span class="badge bg-secondary fs-6">{{sector}}</span>
                </div>
                <div class="d-flex align-items-baseline mb-3">
                    <h4 class="fw-bold me-2 mb-0">{{formattedPrice}}원</h4>
                    <span class="{{colorClass}} fw-semibold">
                        {{rate}}%
                        {{#isRise}}<i class="bi bi-caret-up-fill"></i>{{/isRise}}
                        {{^isRise}}<i class="bi bi-caret-down-fill"></i>{{/isRise}}
                    </span>
                </div>
                <table class="table table-bordered align-middle mt-4">
                    <tbody>
                    <tr>
                        <th class="table-light" style="width: 25%;">종목 코드</th>
                        <td>{{code}}</td>
                    </tr>
                    <tr>
                        <th class="table-light">거래량</th>
                        <td>{{formattedVolume}}</td>
                    </tr>
                    <tr>
                        <th class="table-light">시가총액</th>
                        <td>{{formattedMarketCap}}</td>
                    </tr>
                    <tr>
                        <th class="table-light">업종</th>
                        <td>{{sector}}</td>
                    </tr>
                    </tbody>
                </table>
                <div class="d-flex justify-content-end gap-2 mt-4">
                    <a href="/stock/getStock" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> 목록
                    </a>
                    <button class="btn btn-warning text-white" type="button" data-bs-toggle="offcanvas"
                            data-bs-target="#offcanvasEditStock" aria-controls="offcanvasEditStock">
                        <i class="bi bi-pencil"></i> 수정
                    </button>
                    <a href="/stock/deleteStock/{{id}}" class="btn btn-danger">
                        <i class="bi bi-trash"></i> 삭제
                    </a>
                </div>
            {{/stockDetail}}
        </div>
    </div>
</div>
{{#stockDetail}}
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasEditStock" aria-labelledby="offcanvasEditStockLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasEditStockLabel">
            <i class="bi bi-pencil-square"></i> 주식 정보 수정
        </h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body">
        <form id="editStockForm">
            <input type="hidden" name="id" value="{{id}}" />

            <div class="mb-3">
                <label class="form-label">종목코드</label>
                <input type="text" class="form-control" name="code" value="{{code}}" required />
            </div>
            <div class="mb-3">
                <label class="form-label">종목명</label>
                <input type="text" class="form-control" name="name" value="{{name}}" required />
            </div>
            <div class="mb-3">
                <label class="form-label">현재가</label>
                <input type="number" class="form-control" name="price" value="{{price}}" required />
            </div>
            <div class="mb-3">
                <label class="form-label">등락률 (%)</label>
                <input type="number" step="0.01" class="form-control" name="rate" value="{{rate}}" />
            </div>
            <div class="mb-3">
                <label class="form-label">거래량</label>
                <input type="number" class="form-control" name="volume" value="{{volume}}" />
            </div>
            <div class="mb-3">
                <label class="form-label">시가총액</label>
                <input type="number" class="form-control" name="market_cap" value="{{market_cap}}" />
            </div>
            <div class="mb-3">
                <label class="form-label">업종</label>
                <input type="text" class="form-control" name="sector" value="{{sector}}" />
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-check-circle"></i> 수정 완료
                </button>
            </div>
        </form>
    </div>
</div>
{{/stockDetail}}
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1055">
    <div id="toastEditSuccess" class="toast text-bg-success border-0" role="alert" aria-live="assertive"
         aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">✅ 주식 정보가 성공적으로 수정되었습니다!</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>

    <div id="toastEditError" class="toast text-bg-danger border-0" role="alert" aria-live="assertive"
         aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">❌ 수정 중 오류가 발생했습니다.</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>
</div>

{{>layouts/footer}}

<script>
    // 수정 폼 처리
    document.getElementById("editStockForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const form = e.target;
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      const id = data.id;

      try {
        const res = await fetch(`/api/stock/edit/${id}`, {
          method: "PATCH",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
        });

        if (res.ok) {
          const offcanvasEl = document.getElementById("offcanvasEditStock");
          const offcanvas = bootstrap.Offcanvas.getInstance(offcanvasEl);
          offcanvas.hide();

          new bootstrap.Toast(document.getElementById("toastEditSuccess")).show();
          setTimeout(() => location.reload(), 1500);
        } else {
          new bootstrap.Toast(document.getElementById("toastEditError")).show();
        }
      } catch (err) {
        new bootstrap.Toast(document.getElementById("toastEditError")).show();
      }
    });
</script>
